plugins {
	// Add in spring-boot oriented tasks (bootRun, etc)
	id 'org.springframework.boot' version '2.5.7'
	// Plugin to auto-detect Spring BOM for dependency versioning
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	// Java support
	id 'java'
	// Coverage goals
	id 'jacoco'
	// Code formmatter (spotlessCheck, spotlessApply)
	id 'com.diffplug.spotless' version '6.4.2'
	// Dependency scan for CVE vulnerabilities
	id 'org.owasp.dependencycheck' version '7.0.4.1'
	// Code check
	id 'checkstyle'
}

apply from: 'gradle/checkstyle.gradle'
apply from: 'gradle/dependencyCheck/dependencyCheck.gradle'
apply from: 'gradle/docker.gradle'
apply from: 'gradle/jacoco.gradle'
apply from: 'gradle/spotless.gradle'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

allprojects {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
       systemProperty "file.encoding", "UTF-8"
    }
}

repositories {
	mavenCentral()
}

jar {
    baseName = "demomongo"
    group    = "com.gsdd"
    version  = "2.0.1"
    manifest { attributes "Main-Class": "com.gsdd.demo.mongo.MongoApplication" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'org.aspectj:aspectjweaver:1.8.13'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
	useJUnitPlatform()
	ignoreFailures = false
	reports.junitXml.destination = file("$buildDir/reports/junit/test-results")
	testLogging.showStandardStreams = true
   	testLogging.exceptionFormat = 'full'
}

task publish(type: GradleBuild) {
     tasks = ['clean', 'build', 'test', 'jacocoTestCoverageVerification', 'jacocoTestReport', 'jar']
}
